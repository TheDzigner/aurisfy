<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="/favicon/favicon.png" type="image/x-icon">
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Varela+Round&display=swap" rel="stylesheet">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/template.css">
    <title>  </title>
</head>
<body> 
    

    <aside>
       <button class="backHome">
        <a href="/">
          <svg xmlns="http://www.w3.org/2000/svg" height="25" viewBox="0 -960 960 960" width="25">
            <path d="M400-80 0-480l400-400 56 57-343 343 343 343-56 57Z"/>
          </svg>
        </a>
       </button>
        <div class="playing_audio_card">
          
          <div class="audio_cover">
            
           <% if ( data.type === 'playlist' ) { %>
            <img src="<%=data.playlist_tracks[0].cover%>" alt="">
           <% } else if (  data.type === 'album') { %>
            <img src="<%=data.album_cover%>" alt="">
           <%}%>
          
         
          </div>

          <div class="audio_details">

            <% if ( data.type === 'playlist' ) { %>
              <a href="/track/" class="audioName"> </a>
             <% } else if (  data.type === 'album') { %>
              <a href="/track/<%=data.album_audios[0].id%>" class="audioName"> <%=data.album_audios[0].name%> </a>
             <%}%>


             <div class="artists">
              

              <% if ( data.type === 'playlist' ) { %>
                
                <% data.playlist_tracks[0].authors.forEach((a) => { %>
                     <a href="/artist/<%=a.id%>"><%=a.artist%></a>
                <% })%>

               <% } else if (  data.type === 'album') { %>
                    
                <% data.album_audios[0].authors.forEach((a) => { %>
                  <a href="/artist/<%=a.id%>"><%=a.artist%></a>
               <% })%>

               <%}%>
  

             </div>
          </div>

          <div class="progress_bar">
            <div class="time loopBtn">
             
                <button class="loopAudioBtn">
                  <svg xmlns="http://www.w3.org/2000/svg" height="15" viewBox="0 -960 960 960" width="15">
                    <path d="M700-270v-130q0-13 8.5-21.5T730-430q13 0 21.5 8.5T760-401v161q0 13-8.5 21.5T730-210H236l64 64q10 10 10 22.5t-9 21.5q-9 9-21 9.5t-21-8.5L141-219q-9-9-9-21t9-21l117-117q9-9 21.5-9t21.5 9q9 9 9 21.5t-9 21.5l-65 65h464ZM260-690v130q0 13-8.5 21.5T230-530q-13 0-21.5-8.5T200-559v-161q0-13 8.5-21.5T230-750h494l-64-64q-9-9-9.5-22t8.5-22q9-9 21-9.5t21 8.5l118 118q9 9 9 21t-9 21L702-582q-9 9-21.5 9t-21.5-9q-9-9-9-21.5t9-21.5l65-65H260Z"/>
                  </svg>
                </button>
                <button class="shuffleModeBtn">
                  <svg xmlns="http://www.w3.org/2000/svg" height="15" viewBox="0 -960 960 960" width="15">
                    <path d="M581-150v-60h125L522-393l42-43 186 184v-127h60v229H581Zm-389 0-42-43 558-558H581v-60h229v229h-60v-126L192-150Zm203-374L150-768l43-43 245 244-43 43Z"/>
                  </svg>
                </button>
              
            </div>
            <input type="range" name="" id="audio_progress" value="0">
          </div>

            <div class="controls_btns">
              <button class="prevBtn">
                <svg xmlns="http://www.w3.org/2000/svg" height="35" viewBox="0 -960 960 960" width="35">
                  <path d="M250-240q-13 0-21.5-8.5T220-270v-420q0-13 8.5-21.5T250-720q13 0 21.5 8.5T280-690v420q0 13-8.5 21.5T250-240Zm443-33L430-455q-13-9-13-25t13-25l263-182q15-11 31-2.5t16 26.5v366q0 18-16 26.5t-31-2.5Zm-13-207Zm0 125v-250L499-480l181 125Z"/>
                </svg>
              </button>
              <button class="playState">
                <svg xmlns="http://www.w3.org/2000/svg" height="35" viewBox="0 -960 960 960" width="35">
                  <path d="M320-203v-560l440 280-440 280Zm60-280Zm0 171 269-171-269-171v342Z"/>
                </svg>
              </button>
              <button class="nextBtn">
                <svg xmlns="http://www.w3.org/2000/svg" height="35" viewBox="0 -960 960 960" width="35">
                  <path d="M709.825-240Q697-240 688.5-248.625T680-270v-420q0-12.75 8.675-21.375 8.676-8.625 21.5-8.625 12.825 0 21.325 8.625T740-690v420q0 12.75-8.675 21.375-8.676 8.625-21.5 8.625ZM267-273q-15 11-31 2.25T220-297v-366q0-17.5 16-26.25t31 2.25l263 182q13 9.111 13 25.056Q543-464 530-455L267-273Zm13-207Zm0 125 181-125-181-125v250Z"/>
                </svg>
              </button>

              <% if ( data.type === 'playlist' ) { %>
                <audio src="<%=data.playlist_tracks[0].src%>" id="audio"></audio>
               <% } else if (  data.type === 'album') { %>
                <audio src="<%=data.album_audios[0].src%>" id="audio"></audio>
               <%}%>
  
             


            </div>

        </div>
      
    
    
    
      </aside>
    

      <section>

     <div class="playlist_banner">

        <div class="cover">

          <% if ( data.type === 'playlist' ) { %>
            <img src="<%=data.playlist_cover%>" alt="">
           <% } else if (  data.type === 'album') { %>
            <img src="<%=data.album_cover%>" alt="">
           <%}%>
        </div>



        <div class="details">

          <% if ( data.type === 'playlist' ) { %>
            <h3><%=data.type%></h3>
            <h5> <%=data.playlist_title%></h5>
            <p> <%=data.playlist_tracks.length%> Songs </p>
           <% } else if (  data.type === 'album') { %>
            <h3><%=data.type%></h3>
            <h5> <%=data.album_name%></h5>
            <p> <%=data.album_audios.length%> Songs </p>
           <%}%>
          
        </div>
     </div>

     <div class="action_btns">
         <button>
            <svg xmlns="http://www.w3.org/2000/svg" height="30" viewBox="0 -960 960 960" width="30">
            <path d="m480-121-41-37q-105.768-97.121-174.884-167.561Q195-396 154-451.5T96.5-552Q80-597 80-643q0-90.155 60.5-150.577Q201-854 290-854q57 0 105.5 27t84.5 78q42-54 89-79.5T670-854q89 0 149.5 60.423Q880-733.155 880-643q0 46-16.5 91T806-451.5Q765-396 695.884-325.561 626.768-255.121 521-158l-41 37Zm0-79q101.236-92.995 166.618-159.498Q712-426 750.5-476t54-89.135q15.5-39.136 15.5-77.72Q820-709 778-751.5T670.225-794q-51.524 0-95.375 31.5Q531-731 504-674h-49q-26-56-69.85-88-43.851-32-95.375-32Q224-794 182-751.5t-42 108.816Q140-604 155.5-564.5t54 90Q248-424 314-358t166 158Zm0-297Z"/>
            </svg>
         </button>
         <button>
            <svg xmlns="http://www.w3.org/2000/svg" height="30" viewBox="0 -960 960 960" width="30">
            <path d="M727-80q-47.5 0-80.75-33.346Q613-146.693 613-194.331q0-6.669 1.5-16.312T619-228L316-404q-15 17-37 27.5T234-366q-47.5 0-80.75-33.25T120-480q0-47.5 33.25-80.75T234-594q23 0 44 9t38 26l303-174q-3-7.071-4.5-15.911Q613-757.75 613-766q0-47.5 33.25-80.75T727-880q47.5 0 80.75 33.25T841-766q0 47.5-33.25 80.75T727-652q-23.354 0-44.677-7.5T646-684L343-516q2 8 3.5 18.5t1.5 17.741q0 7.242-1.5 15Q345-457 343-449l303 172q15-14 35-22.5t46-8.5q47.5 0 80.75 33.25T841-194q0 47.5-33.25 80.75T727-80Zm.035-632Q750-712 765.5-727.535q15.5-15.535 15.5-38.5T765.465-804.5q-15.535-15.5-38.5-15.5T688.5-804.465q-15.5 15.535-15.5 38.5t15.535 38.465q15.535 15.5 38.5 15.5Zm-493 286Q257-426 272.5-441.535q15.5-15.535 15.5-38.5T272.465-518.5q-15.535-15.5-38.5-15.5T195.5-518.465q-15.5 15.535-15.5 38.5t15.535 38.465q15.535 15.5 38.5 15.5Zm493 286Q750-140 765.5-155.535q15.5-15.535 15.5-38.5T765.465-232.5q-15.535-15.5-38.5-15.5T688.5-232.465q-15.5 15.535-15.5 38.5t15.535 38.465q15.535 15.5 38.5 15.5ZM727-766ZM234-480Zm493 286Z"/>
            </svg>
         </button>
     </div>




     <div class="cards_wrapper"  data-playlist="<%=JSON.stringify(data) %>">
  
    
     <% if( data ) { %>
           

         

            <% if ( data.type === 'playlist' ) { %>

             
              <% data.playlist_tracks.forEach((d) => { %>


                <div class="card">
                    <div class="card_details">
                     <a href="/track/<%=d.id%>"> <%=d.name%> </a>
    
                     <div class="artists">
                      <%d.authors.forEach((a) =>{ %>
                        <a href="/artist/<%=a.id%>"> <%=a.artist%> </a> 
                         <%})%>
                         
                     </div>
                      
                    </div>
                    <div class="actions_btn">
                      <button class="play_btn">
                        <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256">
                          <path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path>
                        </svg>
                      </button>
                      <button class="favBtn">
                         <svg xmlns="http://www.w3.org/2000/svg" height="25" viewBox="0 -960 960 960" width="25">
                         <path d="m480-121-41-37q-105.768-97.121-174.884-167.561Q195-396 154-451.5T96.5-552Q80-597 80-643q0-90.155 60.5-150.577Q201-854 290-854q57 0 105.5 27t84.5 78q42-54 89-79.5T670-854q89 0 149.5 60.423Q880-733.155 880-643q0 46-16.5 91T806-451.5Q765-396 695.884-325.561 626.768-255.121 521-158l-41 37Zm0-79q101.236-92.995 166.618-159.498Q712-426 750.5-476t54-89.135q15.5-39.136 15.5-77.72Q820-709 778-751.5T670.225-794q-51.524 0-95.375 31.5Q531-731 504-674h-49q-26-56-69.85-88-43.851-32-95.375-32Q224-794 182-751.5t-42 108.816Q140-604 155.5-564.5t54 90Q248-424 314-358t166 158Zm0-297Z"/>
                         </svg>
                      </button>
                      <button class="shareBtn" data-id="<%=d.id%>">
                         <svg xmlns="http://www.w3.org/2000/svg" height="25" viewBox="0 -960 960 960" width="25">
                         <path d="M727-80q-47.5 0-80.75-33.346Q613-146.693 613-194.331q0-6.669 1.5-16.312T619-228L316-404q-15 17-37 27.5T234-366q-47.5 0-80.75-33.25T120-480q0-47.5 33.25-80.75T234-594q23 0 44 9t38 26l303-174q-3-7.071-4.5-15.911Q613-757.75 613-766q0-47.5 33.25-80.75T727-880q47.5 0 80.75 33.25T841-766q0 47.5-33.25 80.75T727-652q-23.354 0-44.677-7.5T646-684L343-516q2 8 3.5 18.5t1.5 17.741q0 7.242-1.5 15Q345-457 343-449l303 172q15-14 35-22.5t46-8.5q47.5 0 80.75 33.25T841-194q0 47.5-33.25 80.75T727-80Zm.035-632Q750-712 765.5-727.535q15.5-15.535 15.5-38.5T765.465-804.5q-15.535-15.5-38.5-15.5T688.5-804.465q-15.5 15.535-15.5 38.5t15.535 38.465q15.535 15.5 38.5 15.5Zm-493 286Q257-426 272.5-441.535q15.5-15.535 15.5-38.5T272.465-518.5q-15.535-15.5-38.5-15.5T195.5-518.465q-15.5 15.535-15.5 38.5t15.535 38.465q15.535 15.5 38.5 15.5Zm493 286Q750-140 765.5-155.535q15.5-15.535 15.5-38.5T765.465-232.5q-15.535-15.5-38.5-15.5T688.5-232.465q-15.5 15.535-15.5 38.5t15.535 38.465q15.535 15.5 38.5 15.5ZM727-766ZM234-480Zm493 286Z"/>
                         </svg>
                      </button>
                    </div>
                 </div>
    
    
            <% }) %>
            

             <% } else if (  data.type === 'album') { %>

             
              <% data.album_audios.forEach((d) => { %>


                <div class="card">
                    <div class="card_details">
                     <a href="/track/<%=d.id%>"> <%=d.name%> </a>
    
                     <div class="artists">
                      <%d.authors.forEach((a) =>{ %>
                        <a href="/artist/<%=a.id%>"> <%=a.artist%> </a> 
                         <%})%>
                          <% if (d.features.length) { %>
                              <% d.features.forEach(f => { %>
                           <a href="/artist/<%=f.id%>"> <%=f.artist%> </a> 
                              <% }) %>
                          <% } %>
                     </div>
                    </div>
                 
                    <div class="actions_btn">
                        <button class="play_btn">
                      <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256">
                        <path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path>
                      </svg>
                    </button>
                 
                      <button class="favBtn">
                         <svg xmlns="http://www.w3.org/2000/svg" height="25" viewBox="0 -960 960 960" width="25">
                         <path d="m480-121-41-37q-105.768-97.121-174.884-167.561Q195-396 154-451.5T96.5-552Q80-597 80-643q0-90.155 60.5-150.577Q201-854 290-854q57 0 105.5 27t84.5 78q42-54 89-79.5T670-854q89 0 149.5 60.423Q880-733.155 880-643q0 46-16.5 91T806-451.5Q765-396 695.884-325.561 626.768-255.121 521-158l-41 37Zm0-79q101.236-92.995 166.618-159.498Q712-426 750.5-476t54-89.135q15.5-39.136 15.5-77.72Q820-709 778-751.5T670.225-794q-51.524 0-95.375 31.5Q531-731 504-674h-49q-26-56-69.85-88-43.851-32-95.375-32Q224-794 182-751.5t-42 108.816Q140-604 155.5-564.5t54 90Q248-424 314-358t166 158Zm0-297Z"/>
                         </svg>
                      </button>
                      <button class="shareBtn" data-id="<%=d.id%>">
                         <svg xmlns="http://www.w3.org/2000/svg" height="25" viewBox="0 -960 960 960" width="25">
                         <path d="M727-80q-47.5 0-80.75-33.346Q613-146.693 613-194.331q0-6.669 1.5-16.312T619-228L316-404q-15 17-37 27.5T234-366q-47.5 0-80.75-33.25T120-480q0-47.5 33.25-80.75T234-594q23 0 44 9t38 26l303-174q-3-7.071-4.5-15.911Q613-757.75 613-766q0-47.5 33.25-80.75T727-880q47.5 0 80.75 33.25T841-766q0 47.5-33.25 80.75T727-652q-23.354 0-44.677-7.5T646-684L343-516q2 8 3.5 18.5t1.5 17.741q0 7.242-1.5 15Q345-457 343-449l303 172q15-14 35-22.5t46-8.5q47.5 0 80.75 33.25T841-194q0 47.5-33.25 80.75T727-80Zm.035-632Q750-712 765.5-727.535q15.5-15.535 15.5-38.5T765.465-804.5q-15.535-15.5-38.5-15.5T688.5-804.465q-15.5 15.535-15.5 38.5t15.535 38.465q15.535 15.5 38.5 15.5Zm-493 286Q257-426 272.5-441.535q15.5-15.535 15.5-38.5T272.465-518.5q-15.535-15.5-38.5-15.5T195.5-518.465q-15.5 15.535-15.5 38.5t15.535 38.465q15.535 15.5 38.5 15.5Zm493 286Q750-140 765.5-155.535q15.5-15.535 15.5-38.5T765.465-232.5q-15.535-15.5-38.5-15.5T688.5-232.465q-15.5 15.535-15.5 38.5t15.535 38.465q15.535 15.5 38.5 15.5ZM727-766ZM234-480Zm493 286Z"/>
                         </svg>
                      </button>
                    </div>
                 </div>
    
    
            <% }) %>
            

             <%}%>




       

    <% } else { %> 
      <h4>no data</h4>
    <%}%>
      
      
     
     </div>


      </section>



      <script>
        document.addEventListener("DOMContentLoaded", function() {
            const audioCards = document.querySelector(".cards_wrapper");
            const dataAttribute = audioCards.getAttribute("data-playlist");
            const data = JSON.parse(dataAttribute);
     
            const cards = audioCards.querySelectorAll('.card');
            const playState = document.querySelector('.playState');
            const prevBtn = document.querySelector('.prevBtn');
            const nextBtn = document.querySelector('.nextBtn');
            const audio = document.querySelector('#audio');
            const audio_progress = document.querySelector('#audio_progress')
            

            const loopAudioBtn = document.querySelector('.loopAudioBtn');
            const shuffleModeBtn = document.querySelector('.shuffleModeBtn');
            const audioName = document.querySelector('.audioName');
            const artists = document.querySelector('.artists');
            const audio_cover = document.querySelector('.audio_cover img');
            const favorites = JSON.parse(localStorage.getItem('favorites')) || []

          let isPlaying = false 
          let currentIndex = 0
          let currentAudio = 0
          let loop = false
          let shuffle = false
          

           
          nextBtn.addEventListener('click',playNextBtn)
          prevBtn.addEventListener('click',playPrev)
          
          shuffleModeBtn.addEventListener('click', toggleShuffleMode)
          
          loopAudioBtn.addEventListener('click', loopingMode)

          function loopingMode()
          {
             // console.log('helo')
              if (!loop) {
                  loop = true 
                  audio.loop = true
                  loopAudioBtn.classList.add('active')
              } else {
                  loop = false 
                  audio.loop = false
                  loopAudioBtn.classList.remove('active')
                  
              }

          }

         
           function toggleShuffleMode()
           {

            if (!shuffle) {
                  shuffle = true 
                  shuffleModeBtn.classList.add('active')
            } else {
                  shuffle = false 
                  shuffleModeBtn.classList.remove('active')

            } 
      
           }

        



           
        
          cards.forEach((card, index) => {
            const play_btn = card.querySelector('.play_btn');
            const favBtn = card.querySelector('.favBtn');
            const shareTrackBtn = card.querySelector('.shareBtn');

            favBtn.addEventListener('click',function(e){
                         e.preventDefault()
                        e.stopImmediatePropagation()
                        e.stopPropagation()

                        if (data.type === 'playlist') {
                          const { name, src , authors, cover} = data.playlist_tracks[index]
                             addToFav(  name, src, authors, cover )
                        }else if(data.type === 'album'){
                          const { name, src , authors, cover} = data.album_audios[index]
                             addToFav(  name, src, authors, cover )
                        }
                        
            })
            
            shareTrackBtn.addEventListener('click',function(e){
              e.preventDefault()
              e.stopImmediatePropagation()
              e.stopPropagation()
              if (data.type === 'playlist') {
                          const trackId = this.dataset.id
                          const { name, authors } = data.playlist_tracks[index]
                             shareTrack( trackId, name, authors )
                        }else if(data.type === 'album'){
                          const trackId = this.dataset.id
                          const { name, authors } = data.album_audios[index]
                             shareTrack(trackId,  name, authors )
                        }

            })
          

             play_btn.addEventListener('click', function(e) {
                        e.preventDefault()
                        e.stopImmediatePropagation()
                        e.stopPropagation()
                       // console.log(e.target)
                      
                cards[currentIndex].classList.remove('active'); // Remove 'active' class from the previous card
                cards[currentIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'

                     currentIndex = index;

                cards[currentIndex].classList.add('active'); // Add 'active' class to the clicked card
                cards[currentIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'

                if (data.type === 'playlist') {

                 audio.src = data.playlist_tracks[currentIndex].src;

                 const { name, src , authors, cover} = data.playlist_tracks[currentIndex]

                 audio.src = src

                 audioName.innerHTML = name

                 audio_cover.src = cover
                 document.title = name


        artists.innerHTML = ''

        authors.forEach((a) => {
    
         artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
     // console.log(a.artist)
       })
         playAudio();
         checkState();

        } else if (data.type === 'album') {

        audio.src = data.album_audios[currentIndex].src;

        const { name, src , authors, cover} = data.album_audios[currentIndex]

         audio.src = src

         audioName.innerHTML = name
         document.title = name

         audio_cover.src = cover

        artists.innerHTML = ''

        authors.forEach((a) => {
    
         artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
     // console.log(a.artist)
       })
          playAudio();
          checkState();
      }

             
      

  });

});

             function addToFav(name, src, authors, cover)
             {
               const data = {name,src,authors,cover}
               favorites.push(data)
              localStorage.setItem('favorites',JSON.stringify(favorites))
             }



           async function shareTrack(trackId, name, authors){
            let author = ''
             const authorArr = authors.forEach((a) => {
               author += a.artist
             })

            // console.log(author)
           const data = { 
            title : `Listening to ${name} by ${author.toLocaleUpperCase()}, on Aurisfy`,
            url : `/track/${trackId}`
           } 
          
        //   console.log(data)
            try {
             navigator.share(data)

            } catch (error) {
               alert('Your browser does not support web share api', error)
            }


             }



          function playNextBtn() {
 
           
            if (shuffle) {

           
              if (data.type === 'playlist') {
                const randomIndex = Math.floor(Math.random() * data.playlist_tracks.length)

                cards.forEach((card) => {
                        card.classList.remove('active');
                        card.querySelector('.play_btn').innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                       });
                     

                cards[randomIndex].classList.add('active')
                cards[currentIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'
                 

                const { name, src , authors, cover} = data.playlist_tracks[randomIndex]

                audio.src = src

                audioName.innerHTML = name

                document.title = name

                audio_cover.src = cover

                artists.innerHTML = ''

                authors.forEach((a) => {
                artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
                 })

                 audio.play()
                 checkState()

              } else if (data.type === 'album') {

                  const randomIndex = Math.floor(Math.random() * data.album_audios.length)

                  cards.forEach((card) => {
                        card.classList.remove('active');
                        card.querySelector('.play_btn').innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                       });
                     
           
                  cards[randomIndex].classList.add('active')
                  cards[currentIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'
                  
                  const { name, src , authors, cover} = data.album_audios[randomIndex]

                audio.src = src

                audioName.innerHTML = name

                audio_cover.src = cover

                artists.innerHTML = ''

                authors.forEach((a) => {
                   
                     artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
                    // console.log(a.artist)
                })
        
                 audio.play()
                 checkState()

                
              }



            } else {

              
              if (data.type === 'playlist') {
            
                     currentIndex < data.playlist_tracks.length -1 ? currentIndex++ : currentIndex = 0
                     cards.forEach((card) => {
                        card.classList.remove('active');
                        card.querySelector('.play_btn').innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                       });
                     
           
                       cards[currentIndex].classList.add('active')
                       cards[currentIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'
                       
                       const { name, src , authors, cover} = data.playlist_tracks[currentIndex]

                        audio.src = src

                        audioName.innerHTML = name

                         document.title = name


                        audio_cover.src = cover

                       artists.innerHTML = ''

                       authors.forEach((a) => {
                   
                        artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
                    // console.log(a.artist)
                      })
        
                     audio.play()
                     checkState()


              } else if (data.type === 'album') {
                       currentIndex < data.album_audios.length -1 ? currentIndex++ : currentIndex = 0
                       cards.forEach((card) => {
                        card.classList.remove('active');
                        card.querySelector('.play_btn').innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                       });
                     
                       cards[currentIndex].classList.add('active')
                       cards[currentIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'


                      const { name, src , authors, cover} = data.album_audios[currentIndex]

                       audio.src = src

                       audioName.innerHTML = name 

                        document.title = name

                       audio_cover.src = cover
                       
                       artists.innerHTML = ''

                       authors.forEach((a) => {
                   
                        artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
                    // console.log(a.artist)
                      })
        
                     audio.play()
                     checkState()

                
              }




            }
    
           
              
            
          }

         
          function playPrev(){

            if (shuffle) {

                  if (data.type === 'playlist') {
               const randomIndex = Math.floor(Math.random() * data.playlist_tracks.length)

               cards.forEach((card) => {
                        card.classList.remove('active');
                        card.querySelector('.play_btn').innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                       });

                cards[randomIndex].classList.add('active')
                cards[randomIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'


                const { name, src , authors, cover} = data.playlist_tracks[randomIndex]

                 audio.src = src

                 audioName.innerHTML = name

                 document.title = name

                 audio_cover.src = cover

                 artists.innerHTML = ''

                 authors.forEach((a) => {
      
                      artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
                   })

                audio.play()
                checkState()

                  } else if( data.type === 'album') {

                const randomIndex = Math.floor(Math.random() * data.album_audios.length)

                cards.forEach((card) => {
                        card.classList.remove('active');
                        card.querySelector('.play_btn').innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                       });

                cards[randomIndex].classList.add('active')

                cards[randomIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'

                const { name, src , authors, cover} = data.album_audios[randomIndex]

                 audio.src = src

                 audioName.innerHTML = name

                 document.title = name

                 audio_cover.src = cover

                 artists.innerHTML = ''

                 authors.forEach((a) => {
                    artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
                   })

                audio.play()
                checkState()
                

                     
                  }

               } else {

 
                   if (data.type === 'playlist') {
                    
                    currentIndex > 0 ? currentIndex-- : currentIndex = data.playlist_tracks.length -1 
 
                    cards.forEach((card) => {
                        card.classList.remove('active');
                        card.querySelector('.play_btn').innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                       });

                    cards[currentIndex].classList.add('active')
                    cards[currentIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'


                    const { name, src , authors, cover} = data.playlist_tracks[currentIndex]

                    audio.src = src

                    audioName.innerHTML = name

                    document.title = name

                    audio_cover.src = cover


                    artists.innerHTML = ''

                    authors.forEach((a) => {
                    artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
                       })

                   audio.play()
                   checkState()




                   } else if( data.type === 'album') {

                    currentIndex > 0 ? currentIndex-- : currentIndex = data.album_audios.length -1 
 
                    cards.forEach((card) => {
                        card.classList.remove('active');
                        card.querySelector('.play_btn').innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                       });

                    cards[currentIndex].classList.add('active')
                    cards[currentIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'


                    const { name, src , authors, cover} = data.album_audios[currentIndex]

                    audio.src = src

                    audioName.innerHTML = name

                    document.title = name

                    audio_cover.src = cover


                    artists.innerHTML = ''

                    authors.forEach((a) => {
                    artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
                       })

                   audio.play()
                   checkState()


                    
                   }

                    
                  
                  
                  }


 


          
          }


          playState.addEventListener('click',function(){
                playAudio()
                checkState()
          })



          
          function checkState()
          {
            if (!audio.paused) {
              document.title = 'Aurisfy'
              playState.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" height="35" viewBox="0 -960 960 960" width="35"><path d="M525-200v-560h235v560H525Zm-325 0v-560h235v560H200Zm385-60h115v-440H585v440Zm-325 0h115v-440H260v440Zm0-440v440-440Zm325 0v440-440Z"/></svg>'
          }else{

              playState.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" height="35" viewBox="0 -960 960 960" width="35"><path d="M320-203v-560l440 280-440 280Zm60-280Zm0 171 269-171-269-171v342Z"/></svg>'
          }
          }


          function playAudio(){

            if (audio.paused) {
                    audio.play()  
                    cards[currentIndex].classList.add('active');
                    cards[currentIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'
                    playState.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" height="35" viewBox="0 -960 960 960" width="35"><path d="M525-200v-560h235v560H525Zm-325 0v-560h235v560H200Zm385-60h115v-440H585v440Zm-325 0h115v-440H260v440Zm0-440v440-440Zm325 0v440-440Z"/></svg>'
            } else {
                  audio.pause()
                  cards[currentIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                   playState.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" height="35" viewBox="0 -960 960 960" width="35"><path d="M320-203v-560l440 280-440 280Zm60-280Zm0 171 269-171-269-171v342Z"/></svg>'
            }
          }
        
         
           

         
              function playNext(){


                if (shuffle) {

                        if (data.type === 'playlist') {
                     const randomIndex = Math.floor(Math.random() * data.playlist_tracks.length)
                     cards.forEach((card) => {
                        card.classList.remove('active');
                        card.querySelector('.play_btn').innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                       });
                       cards[randomIndex].classList.add('active')
                        cards[randomIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'

                     const { name, src , authors} = data.playlist_tracks[randomIndex]

                     audio.src = src

                     audioName.innerHTML = name

                     document.title = name
                    
                      artists.innerHTML = ''

                    authors.forEach((a) => {
                   
                     artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
                    // console.log(a.artist)
                  })
        
                audio.play()
                checkState()

                    } else if ( data.type === 'album') {
                     const randomIndex = Math.floor(Math.random() * data.album_audios.length)
                     cards.forEach((card) => {
                        card.classList.remove('active');
                        card.querySelector('.play_btn').innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                       });
                       cards[randomIndex].classList.add('active')
                      cards[randomIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'


                     const { name, src , authors} = data.album_audios[randomIndex]

                     audio.src = src

                     audioName.innerHTML = name

                     document.title = name

                      artists.innerHTML = ''

                    authors.forEach((a) => {
                   
                     artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
                    // console.log(a.artist)
                  })
        
                audio.play()
                checkState()

                        }

                     } else {
 
                     
                       if (data.type === 'playlist') {
                        currentIndex < data.playlist_tracks.length -1 ? currentIndex++ : currentIndex = 0
                        cards.forEach((card) => {
                        card.classList.remove('active');
                        card.querySelector('.play_btn').innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                       });
                       cards[currentIndex].classList.add('active')
        
                       cards[currentIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'

                      const { name, src , authors} = data.playlist_tracks[currentIndex]

                       audio.src = src

                       audioName.innerHTML = name

                       document.title = name

                       artists.innerHTML = ''

                       authors.forEach((a) => {
                   
                        artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
                    // console.log(a.artist)
                      })
        
                     audio.play()
                     checkState()

                       } else if ( data.type === 'album') {

                        currentIndex < data.album_audios.length -1 ? currentIndex++ : currentIndex = 0
                        cards.forEach((card) => {
                        card.classList.remove('active');
                        card.querySelector('.play_btn').innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M232.4,114.49,88.32,26.35a16,16,0,0,0-16.2-.3A15.86,15.86,0,0,0,64,39.87V216.13A15.94,15.94,0,0,0,80,232a16.07,16.07,0,0,0,8.36-2.35L232.4,141.51a15.81,15.81,0,0,0,0-27ZM80,215.94V40l143.83,88Z"></path></svg>'
                       });
                       cards[currentIndex].classList.add('active')
                     
                     cards[currentIndex].querySelector('.play_btn').innerHTML =  '<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0fffff" viewBox="0 0 256 256"><path d="M200,32H160a16,16,0,0,0-16,16V208a16,16,0,0,0,16,16h40a16,16,0,0,0,16-16V48A16,16,0,0,0,200,32Zm0,176H160V48h40ZM96,32H56A16,16,0,0,0,40,48V208a16,16,0,0,0,16,16H96a16,16,0,0,0,16-16V48A16,16,0,0,0,96,32Zm0,176H56V48H96Z"></path></svg>'

                      const { name, src , authors, cover} = data.album_audios[currentIndex]

                       audio.src = src

                       audioName.innerHTML = name

                       document.title = name

                       audio_cover.src = cover


                       artists.innerHTML = ''

                       authors.forEach((a) => {
                   
                        artists.innerHTML += `<a href='/artist/${a.id}'> ${a.artist} </a>`
                    // console.log(a.artist)
                      })
        
                     audio.play()
                     checkState()

                        
                       }


                    }
                



              }
              
              audio.addEventListener('ended',playNext)
               
              let currentT = 0
                 
              audio.addEventListener('timeupdate',function(){
                audio_progress.max = Math.floor(audio.duration)
                audio_progress.value = audio.currentTime

               // audio.duration = audio_progress.value
              })

              audio_progress.addEventListener('input',function(){
               // audio_progress.value = audio.currentTime
                audio.currentTime =  audio_progress.value
              })
           
              
              document.addEventListener('keydown', function (e) {
                        if (e.code === 'Space') {
                                 e.preventDefault();
                                 playAudio();
                                 checkState();
                        }

                        if (e.key === 'ArrowDown' && e.ctrlKey) {
                                 e.preventDefault()
                                  playNextBtn();
                                  checkState();
                                  
                        }
                        if (e.key === 'ArrowUp' && e.ctrlKey) {
                                 e.preventDefault()
                                  playPrev();
                                   checkState();
                                  
                        }


                      });


        });
      </script>
      

</body>
</html>